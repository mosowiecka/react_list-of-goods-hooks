{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","console","log","reverse","App","useState","NONE","setSortType","setIsReversed","handleSortClick","inputSortType","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAa7D,OANAC,QAAQC,IAAIX,EAAUC,GAElBA,GACFC,EAAaU,UAGRV,G,SAnCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAMiB,EAAM,WACjB,MAAgCC,mBAASlB,EAASmB,MAAlD,mBAAOf,EAAP,KAAiBgB,EAAjB,KAEA,EAAoCF,oBAAS,GAA7C,mBAAOb,EAAP,KAAmBgB,EAAnB,KAEMC,EAAkB,SAACC,GAAD,OAA6B,WACnDH,EAAYG,KAYd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWpB,IAAaJ,EAASO,SAC7B,iBAAmB,0BACvBmB,QAASJ,EAAgBtB,EAASO,UAJpC,iCASA,wBACEkB,KAAK,SACLD,UAAWpB,IAAaJ,EAASY,OAC7B,oBAAsB,6BAC1Bc,QAASJ,EAAgBtB,EAASY,QAJpC,4BASA,wBACEa,KAAK,SACLD,WAA0B,IAAfnB,EACP,oBAAsB,6BAC1BqB,QAlCyB,WAC/BL,GAAehB,IA6BX,uBASGD,IAAaJ,EAASmB,OACH,IAAfd,IAEH,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAzCmB,WAC7BL,GAAc,GACdD,EAAYpB,EAASmB,OAoCb,sBAUN,6BACE,6BAEIjB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC5CsB,KAAI,SAACC,GAAD,OACH,oBAAI,UAAQ,OAAZ,SAAoBA,eCvHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1e43db3d.chunk.js","sourcesContent":["// import React from 'react';\nimport { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n      break;\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleSortClick = (inputSortType: SortType) => () => {\n    setSortType(inputSortType);\n  };\n\n  const handleReverseClick = () => () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleResetClick = () => () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortType === SortType.ALPHABET\n            ? 'button is-info' : 'button is-info is-light'}\n          onClick={handleSortClick(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortType === SortType.LENGTH\n            ? 'button is-success' : 'button is-success is-light'}\n          onClick={handleSortClick(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed === true\n            ? 'button is-warning' : 'button is-warning is-light'}\n          onClick={handleReverseClick()}\n        >\n          Reverse\n        </button>\n\n        {!(sortType === SortType.NONE\n            && isReversed === false)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleResetClick()}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {\n            getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map((good) => (\n                <li data-cy=\"Good\">{good}</li>\n              ))\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
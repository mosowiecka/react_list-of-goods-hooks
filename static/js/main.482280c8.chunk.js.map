{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sign","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","NONE","indexOf","App","useState","state","setState","handleSortClick","className","type","onClick","handleReverseClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GACnBI,GAAsB,IAAfF,EAAuB,GAAK,EAiBzC,OAfAC,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKJ,EAASW,SACZ,OAAOJ,EAAQE,EAAMG,cAAcF,GACrC,KAAKV,EAASa,OACZ,OAAON,GAAQE,EAAMK,OAASJ,EAAMI,OAChC,IAAOL,EAAMG,cAAcF,GAAS,EAAI,GAAK,IACnD,KAAKV,EAASe,KACZ,OAAOR,GAAQN,EAAgBe,QAAQP,GAC3BR,EAAgBe,QAAQN,IACtC,QACE,OAAO,MAINJ,G,SAjCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAMiB,EAAM,WACjB,MAA0BC,mBAAS,CACjCd,SAAUJ,EAASe,KACnBV,YAAY,IAFd,mBAAOc,EAAP,KAAcC,EAAd,KAKMC,EAAkB,SAACjB,GACvB,IAAQC,EAAec,EAAfd,WAERe,EAAS,CAAEhB,WAAUC,gBASfD,EAAyBe,EAAzBf,SAAUC,EAAec,EAAfd,WAElB,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWlB,IAAaJ,EAASW,SAC7B,iBAAmB,0BACvBa,QAAS,kBAAMH,EAAgBrB,EAASW,WAJ1C,iCASA,wBACEY,KAAK,SACLD,UAAWlB,IAAaJ,EAASa,OAC7B,oBAAsB,6BAC1BW,QAAS,kBAAMH,EAAgBrB,EAASa,SAJ1C,4BASA,wBACEU,KAAK,SACLD,WAA0B,IAAfjB,EACP,oBAAsB,6BAC1BmB,QAAS,kBAjCU,WACzB,IAAQpB,EAAyBe,EAAzBf,SAAUC,EAAec,EAAfd,WAElBe,EAAS,CAAEhB,WAAUC,YAAaA,IA8BboB,IAJjB,uBASGrB,IAAaJ,EAASe,OACH,IAAfV,IAEH,wBACEkB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAMJ,EACb,CACEf,YAAY,EACZD,SAAUJ,EAASe,QANzB,sBAeN,6BACE,6BAEIb,EAAkBD,EAAiB,CAAEG,WAAUC,eAC5CqB,KAAI,SAACC,GAAD,OACH,oBAAI,UAAQ,OAAZ,SAAoBA,eC5HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.482280c8.chunk.js","sourcesContent":["// import React from 'react';\nimport { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n  const sign = isReversed === false ? 1 : -1;\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return sign * (good1.localeCompare(good2));\n      case SortType.LENGTH:\n        return sign * (good1.length - good2.length\n          + 0.1 * (good1.localeCompare(good2) > 0 ? 1 : -1));\n      case SortType.NONE:\n        return sign * (goodsFromServer.indexOf(good1)\n                  - goodsFromServer.indexOf(good2));\n      default:\n        return 0;\n    }\n  });\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [state, setState] = useState({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n\n  const handleSortClick = (sortType: SortType) => {\n    const { isReversed } = state;\n\n    setState({ sortType, isReversed });\n  };\n\n  const handleReverseClick = () => {\n    const { sortType, isReversed } = state;\n\n    setState({ sortType, isReversed: !isReversed });\n  };\n\n  const { sortType, isReversed } = state;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortType === SortType.ALPHABET\n            ? 'button is-info' : 'button is-info is-light'}\n          onClick={() => handleSortClick(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortType === SortType.LENGTH\n            ? 'button is-success' : 'button is-success is-light'}\n          onClick={() => handleSortClick(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed === true\n            ? 'button is-warning' : 'button is-warning is-light'}\n          onClick={() => handleReverseClick()}\n        >\n          Reverse\n        </button>\n\n        {!(sortType === SortType.NONE\n            && isReversed === false)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => setState(\n                {\n                  isReversed: false,\n                  sortType: SortType.NONE,\n                },\n              )}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {\n            getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map((good) => (\n                <li data-cy=\"Good\">{good}</li>\n              ))\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}